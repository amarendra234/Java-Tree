/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int lastnode;
    public TreeNode buildTree(int[] inorder, int[] postorder) {
        int l=0;
        int r=inorder.length-1;
          lastnode=r;
        return build_tree(inorder,postorder,l,r);
    }
    public TreeNode build_tree(int[] in, int[] post,int l,int r){
        if(l>r){
            return null;
        }
        TreeNode root=new TreeNode(post[lastnode]);
        lastnode-=1;
        int index=-1;
        for(int i=l;i<=r;i++){
            if(in[i]==root.val){
                index=i;
                break;
            }
        }
        root.right=build_tree(in,post,index+1,r);
        root.left=build_tree(in,post,l,index-1);
        return root;
    }
}
